{"version":3,"sources":["images/ic-logo.svg","images/ic-search.svg","images/ic-book.svg","context/contactReducer.js","context/types.js","context/contactState.js","components/contacts/ContactModal.jsx","components/ButtonWithIcon.jsx","components/Header.jsx","components/Avatar.jsx","components/contacts/ContactRemoveModal.jsx","components/contacts/ContactList.jsx","screens/HomeScreen.jsx","App.js","index.js"],"names":["module","exports","contactReducer","state","action","type","contacts","payload","filtered","filter","contact","regex","RegExp","name","match","email","phone","map","id","current","initialState","ContactContext","createContext","ContactProvider","children","useReducer","dispatch","Provider","value","contactState","addContact","updateContact","getContact","text","deleteContact","setCurrentContact","data","clearCurrentContact","customStyles","content","padding","top","left","right","bottom","marginRight","transform","boxShadow","borderRadius","overlay","backgroundColor","ContactModal","isOpen","closeModal","currentId","useContext","useState","isEditMode","setIsEditMode","uuidv4","formData","setFormData","afterOpenModal","a","editContact","handleChange","e","target","handleCloseModal","handleSubmit","preventDefault","checkEmptyForm","Object","values","every","item","appElement","document","getElementById","onAfterOpen","onRequestClose","style","onSubmit","className","htmlFor","onChange","mask","onClick","disabled","ButtonWithIcon","icon","styles","Header","showModal","setShowModal","useRef","handleModal","src","IcLogo","alt","length","aria-hidden","placeholder","ref","IcSearch","Avatar","getFirstLetter","charAt","toUpperCase","intial","chosenColor","color","letters","includes","randomColor","ContactRemoveModal","ContactList","showRemoveModal","setShowRemoveModal","setCurrentId","tableColumns","accessor","Cell","row","original","onClickEdit","onClickDelete","Table","currentData","columns","useMemo","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","tr","getRowProps","animate","transition","delay","duration","cells","cell","getCellProps","IcBook","HomeScreen","App","path","exact","component","ReactDOM"],"mappings":"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","file":"static/js/main.339b8f95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ic-logo.8484da93.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-search.22dd5353.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-book.79c08928.svg\";","import * as types from './types';\r\n\r\nconst contactReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_CONTACT:\r\n      return {\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n\r\n    case types.FIND_CONTACT:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((contact) => {\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          return (\r\n            contact.name.match(regex) ||\r\n            contact.email.match(regex) ||\r\n            contact.phone.match(regex)\r\n          );\r\n        }),\r\n      };\r\n\r\n    case types.UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n\r\n    case types.CURRENT_CONTACT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    case types.CLEAR_CURRENT_CONTACT: {\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    }\r\n\r\n    case types.DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactReducer;\r\n","export const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const FIND_CONTACT = 'FIND_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const CURRENT_CONTACT = 'CURRENT_CONTACT';\r\nexport const CLEAR_CURRENT_CONTACT = 'CLEAR_CURRENT_CONTACT';\r\n","import React, { createContext, useReducer } from 'react';\r\nimport contactReducer from './contactReducer';\r\nimport * as types from './types';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n};\r\n\r\nexport const ContactContext = createContext();\r\n\r\nexport const ContactProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  const addContact = ({ id, name, email, phone }) => {\r\n    dispatch({\r\n      type: types.ADD_CONTACT,\r\n      payload: {\r\n        id,\r\n        name,\r\n        email,\r\n        phone,\r\n      },\r\n    });\r\n  };\r\n\r\n  const updateContact = ({ id, name, email, phone }) => {\r\n    dispatch({\r\n      type: types.UPDATE_CONTACT,\r\n      payload: {\r\n        id,\r\n        name,\r\n        email,\r\n        phone,\r\n      },\r\n    });\r\n  };\r\n\r\n  const getContact = (text) => {\r\n    dispatch({\r\n      type: types.FIND_CONTACT,\r\n      payload: text,\r\n    });\r\n  };\r\n\r\n  const deleteContact = (id) => {\r\n    dispatch({\r\n      type: types.DELETE_CONTACT,\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const setCurrentContact = (data) => {\r\n    dispatch({\r\n      type: types.CURRENT_CONTACT,\r\n      payload: data,\r\n    });\r\n  };\r\n\r\n  const clearCurrentContact = () => {\r\n    dispatch({ type: types.CLEAR_CURRENT_CONTACT });\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contactState: state,\r\n        addContact,\r\n        updateContact,\r\n        getContact,\r\n        deleteContact,\r\n        setCurrentContact,\r\n        clearCurrentContact,\r\n      }}>\r\n      {children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport InputMask from 'react-input-mask';\r\nimport Modal from 'react-modal';\r\nimport { ContactContext } from '../../context/contactState';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    padding: 0,\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    boxShadow: '0 16px 10px 0 rgba(0, 0, 0, 0.16)',\r\n    borderRadius: '16px',\r\n  },\r\n  overlay: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n  },\r\n};\r\n\r\nconst ContactModal = ({ isOpen, closeModal, currentId }) => {\r\n  const {\r\n    contactState,\r\n    addContact,\r\n    updateContact,\r\n    setCurrentContact,\r\n    clearCurrentContact,\r\n  } = useContext(ContactContext);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n  const initialState = {\r\n    id: uuidv4(),\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const afterOpenModal = async () => {\r\n    if (currentId) {\r\n      const editContact = await contactState.contacts.filter((contact) => {\r\n        return contact.id === currentId;\r\n      });\r\n\r\n      const { id, name, email, phone } = editContact[0];\r\n      setFormData({ ...formData, id, name, email, phone });\r\n      setIsEditMode(true);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setFormData(initialState);\r\n    closeModal();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { id } = formData;\r\n\r\n    if (isEditMode) {\r\n      clearCurrentContact();\r\n      updateContact(formData);\r\n    } else {\r\n      addContact(formData);\r\n      setCurrentContact(id);\r\n    }\r\n\r\n    handleCloseModal();\r\n  };\r\n\r\n  const checkEmptyForm = () => {\r\n    return Object.values(formData).every((item) => item === '');\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      appElement={document.getElementById('root')}\r\n      id='contact-modal'\r\n      isOpen={isOpen}\r\n      onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className='header'>\r\n          <p>Criar novo contato</p>\r\n        </div>\r\n        <div className='body'>\r\n          <div>\r\n            <label htmlFor='name'>Nome</label>\r\n            <input\r\n              name='name'\r\n              type='text'\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor='email'>E-mail</label>\r\n            <input\r\n              name='email'\r\n              type='email'\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor='phone'>Telefone</label>\r\n            <InputMask\r\n              mask='(99)99999-9999'\r\n              name='phone'\r\n              type='text'\r\n              className='phone'\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='footer'>\r\n          <button className='button default' onClick={handleCloseModal}>\r\n            Cancelar\r\n          </button>\r\n          <button\r\n            type='submit'\r\n            className={`button ${checkEmptyForm() ? 'disabled' : 'success'}`}\r\n            disabled={checkEmptyForm()}>\r\n            Salvar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ContactModal;\r\n","import React from 'react';\r\n\r\nconst ButtonWithIcon = ({ text, icon, styles, onClick }) => {\r\n  return (\r\n    <button className={`button ${styles}`} onClick={onClick}>\r\n      {icon}\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonWithIcon;\r\n","import React, { useState, useContext, useRef } from 'react';\r\nimport { ContactContext } from '../context/contactState';\r\nimport ContactModal from './contacts/ContactModal';\r\nimport ButtonWithIcon from './ButtonWithIcon';\r\n\r\nimport IcLogo from '../images/ic-logo.svg';\r\nimport IcSearch from '../images/ic-search.svg';\r\n\r\nconst Header = () => {\r\n  const { contactState, getContact, clearCurrentContact } = useContext(\r\n    ContactContext\r\n  );\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const text = useRef('');\r\n\r\n  const handleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const onChange = () => {\r\n    if (contactState.current) {\r\n      clearCurrentContact();\r\n    }\r\n\r\n    getContact(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className='logo'>\r\n        <img src={IcLogo} alt='logo' />\r\n      </div>\r\n      <div className='create-user'>\r\n        {contactState.contacts.length > 0 && (\r\n          <ButtonWithIcon\r\n            icon={<i className='fa fa-plus' aria-hidden='true'></i>}\r\n            styles={'primary slim'}\r\n            text='Criar contato'\r\n            onClick={handleModal}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className='search-box'>\r\n        <input\r\n          type='text'\r\n          placeholder='Buscar...'\r\n          onChange={onChange}\r\n          ref={text}\r\n        />\r\n        <img src={IcSearch} alt='buscar' />\r\n      </div>\r\n      <ContactModal isOpen={showModal} closeModal={handleModal} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Avatar = ({ name }) => {\r\n  const getFirstLetter = () => {\r\n    return name.charAt(0).toUpperCase();\r\n  };\r\n\r\n  const randomColor = () => {\r\n    const intial = getFirstLetter();\r\n\r\n    const avatarColor = [\r\n      {\r\n        color: 'orange',\r\n        letters: ['A', 'I', 'Q', 'W'],\r\n      },\r\n      {\r\n        color: 'green',\r\n        letters: ['B', 'J', 'R', 'Z'],\r\n      },\r\n      {\r\n        color: 'blue',\r\n        letters: ['C', 'K', 'S'],\r\n      },\r\n      {\r\n        color: 'egg',\r\n        letters: ['D', 'L', 'T'],\r\n      },\r\n      {\r\n        color: 'purple',\r\n        letters: ['E', 'M', 'U'],\r\n      },\r\n      {\r\n        color: 'pink',\r\n        letters: ['F', 'N', 'V'],\r\n      },\r\n      {\r\n        color: 'cyan',\r\n        letters: ['G', 'O', 'X'],\r\n      },\r\n      {\r\n        color: 'shrimp',\r\n        letters: ['H', 'P', 'Y'],\r\n      },\r\n    ];\r\n\r\n    const chosenColor = avatarColor.filter((item) => {\r\n      return item.letters.includes(intial);\r\n    });\r\n\r\n    return chosenColor.length > 0 ? chosenColor[0].color : 'grey';\r\n  };\r\n\r\n  return (\r\n    <div className={`round-avatar ${randomColor()}`}>{getFirstLetter()}</div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React, { useContext } from 'react';\r\nimport { ContactContext } from '../../context/contactState';\r\nimport Modal from 'react-modal';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    padding: 0,\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    boxShadow: '0 16px 10px 0 rgba(0, 0, 0, 0.16)',\r\n    borderRadius: '16px',\r\n  },\r\n  overlay: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n  },\r\n};\r\n\r\nconst ContactRemoveModal = ({ isOpen, closeModal, currentId }) => {\r\n  const { deleteContact } = useContext(ContactContext);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    deleteContact(currentId);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      appElement={document.getElementById('root')}\r\n      id='contact-remove-modal'\r\n      isOpen={isOpen}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className='header'>\r\n          <p>Excluir contato</p>\r\n        </div>\r\n        <div className='body'>Deseja realmente excluir este contato?</div>\r\n        <div className='footer'>\r\n          <button className='button default' onClick={closeModal}>\r\n            Cancelar\r\n          </button>\r\n          <button type='submit' className='button success'>\r\n            Excluir\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ContactRemoveModal;\r\n","import React, { useState, useContext, useMemo } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { ContactContext } from '../../context/contactState';\r\nimport ContactModal from './ContactModal';\r\nimport ButtonWithIcon from '../ButtonWithIcon';\r\nimport Avatar from '../Avatar';\r\n\r\nimport IcBook from '../../images/ic-book.svg';\r\nimport { useTable } from 'react-table';\r\nimport ContactRemoveModal from './ContactRemoveModal';\r\n\r\nconst ContactList = () => {\r\n  const { contactState } = useContext(ContactContext);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\r\n  const [currentId, setCurrentId] = useState(null);\r\n\r\n  const tableColumns = [\r\n    {\r\n      Header: '',\r\n      accessor: 'avatar',\r\n      Cell: ({ row }) => {\r\n        return <Avatar name={row.original.name} />;\r\n      },\r\n    },\r\n    {\r\n      Header: 'Nome',\r\n      accessor: 'name',\r\n    },\r\n    {\r\n      Header: 'E-mail',\r\n      accessor: 'email',\r\n    },\r\n    {\r\n      Header: 'Telefone',\r\n      accessor: 'phone',\r\n    },\r\n    {\r\n      Header: '',\r\n      accessor: 'options',\r\n      Cell: ({ row }) => {\r\n        return (\r\n          <div className='contact-options'>\r\n            <i\r\n              className='fas fa-pencil-alt'\r\n              onClick={() => onClickEdit(row.original.id)}></i>\r\n            <i\r\n              className='fas fa-trash-alt'\r\n              onClick={() => onClickDelete(row.original.id)}></i>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleModal = () => {\r\n    if (showModal) {\r\n      setCurrentId(null);\r\n    }\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleRemoveModal = () => {\r\n    if (showRemoveModal) {\r\n      setCurrentId(null);\r\n    }\r\n    setShowRemoveModal(!showRemoveModal);\r\n  };\r\n\r\n  const onClickEdit = (id) => {\r\n    setCurrentId(id);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onClickDelete = (id) => {\r\n    setCurrentId(id);\r\n    setShowRemoveModal(true);\r\n  };\r\n\r\n  const backgroundColor = (itemInserted) => {\r\n    return itemInserted === contactState.current\r\n      ? {\r\n          animate: { backgroundColor: ['#fff3f2', '#f8f9fd'] },\r\n          transition: { delay: '10', duration: 1 },\r\n        }\r\n      : {};\r\n  };\r\n\r\n  const Table = () => {\r\n    const currentData = contactState.filtered\r\n      ? contactState.filtered\r\n      : contactState.contacts;\r\n\r\n    const columns = useMemo(() => tableColumns, []);\r\n    const data = useMemo(() => currentData, [currentData]);\r\n\r\n    const tableInstance = useTable({\r\n      columns,\r\n      data,\r\n    });\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = tableInstance;\r\n\r\n    return (\r\n      <table {...getTableProps()} className='contact-table'>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n\r\n            return (\r\n              <motion.tr\r\n                id={row.original.id}\r\n                {...row.getRowProps()}\r\n                {...backgroundColor(row.original.id)}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </motion.tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id='contact-list-container'>\r\n      {contactState.contacts.length < 1 ? (\r\n        <div id='contact-create'>\r\n          <img src={IcBook} alt='contato' />\r\n          <p>Nenhum contato foi criado ainda.</p>\r\n          <ButtonWithIcon\r\n            icon={<i className='fa fa-plus' aria-hidden='true'></i>}\r\n            styles={'primary'}\r\n            text='Criar contato'\r\n            onClick={handleModal}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Table />\r\n      )}\r\n      <ContactModal\r\n        isOpen={showModal}\r\n        closeModal={handleModal}\r\n        currentId={currentId}\r\n      />\r\n      <ContactRemoveModal\r\n        isOpen={showRemoveModal}\r\n        closeModal={handleRemoveModal}\r\n        currentId={currentId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { ContactProvider } from '../context/contactState';\r\nimport Header from '../components/Header';\r\nimport ContactList from '../components/contacts/ContactList';\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <ContactProvider>\r\n      <div id='home-screen-container'>\r\n        <Header />\r\n        <ContactList />\r\n      </div>\r\n    </ContactProvider>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport HomeScreen from './screens/HomeScreen';\r\n\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path='/agenda' exact component={HomeScreen} />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}