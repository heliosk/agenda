{"version":3,"sources":["images/ic-logo.svg","images/ic-search.svg","images/ic-book.svg","context/contactReducer.js","context/types.js","context/contactState.js","components/contacts/ContactModal.jsx","components/ButtonWithIcon.jsx","components/Header.jsx","components/Avatar.jsx","components/contacts/ContactRemoveModal.jsx","components/contacts/ContactList.jsx","screens/HomeScreen.jsx","App.js","index.js"],"names":["module","exports","contactReducer","state","action","type","contacts","payload","filtered","filter","contact","regex","RegExp","name","match","email","phone","map","id","current","initialState","ContactContext","createContext","ContactProvider","children","useReducer","dispatch","Provider","value","contactState","addContact","updateContact","getContact","text","deleteContact","setCurrentContact","data","clearCurrentContact","customStyles","content","padding","top","left","right","bottom","marginRight","transform","boxShadow","borderRadius","overlay","backgroundColor","ContactModal","isOpen","closeModal","currentId","useContext","useState","isEditMode","setIsEditMode","uuidv4","formData","setFormData","afterOpenModal","a","editContact","handleChange","e","target","handleCloseModal","handleSubmit","preventDefault","checkEmptyForm","Object","values","every","item","appElement","document","getElementById","onAfterOpen","onRequestClose","style","onSubmit","className","htmlFor","onChange","mask","onClick","disabled","ButtonWithIcon","icon","styles","Header","showModal","setShowModal","useRef","handleModal","src","IcLogo","alt","length","aria-hidden","placeholder","ref","IcSearch","Avatar","getFirstLetter","charAt","toUpperCase","intial","chosenColor","color","letters","includes","randomColor","ContactRemoveModal","ContactList","showRemoveModal","setShowRemoveModal","setCurrentId","tableColumns","accessor","Cell","row","original","onClickEdit","onClickDelete","Table","currentData","columns","useMemo","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","tr","getRowProps","animate","transition","delay","duration","cells","cell","getCellProps","IcBook","HomeScreen","App","path","exact","component","ReactDOM"],"mappings":"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","file":"static/js/main.8930a930.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ic-logo.190ff2d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-search.8fd12e49.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-book.de526db5.svg\";","import * as types from './types';\n\nconst contactReducer = (state, action) => {\n  switch (action.type) {\n    case types.ADD_CONTACT:\n      return {\n        contacts: [...state.contacts, action.payload],\n      };\n\n    case types.FIND_CONTACT:\n      return {\n        ...state,\n        filtered: state.contacts.filter((contact) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return (\n            contact.name.match(regex) ||\n            contact.email.match(regex) ||\n            contact.phone.match(regex)\n          );\n        }),\n      };\n\n    case types.UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id ? action.payload : contact\n        ),\n      };\n\n    case types.CURRENT_CONTACT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n\n    case types.CLEAR_CURRENT_CONTACT: {\n      return {\n        ...state,\n        current: null,\n      };\n    }\n\n    case types.DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;\n","export const ADD_CONTACT = 'ADD_CONTACT';\nexport const FIND_CONTACT = 'FIND_CONTACT';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const CURRENT_CONTACT = 'CURRENT_CONTACT';\nexport const CLEAR_CURRENT_CONTACT = 'CLEAR_CURRENT_CONTACT';\n","import React, { createContext, useReducer } from 'react';\nimport contactReducer from './contactReducer';\nimport * as types from './types';\n\nconst initialState = {\n  contacts: [],\n};\n\nexport const ContactContext = createContext();\n\nexport const ContactProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  const addContact = ({ id, name, email, phone }) => {\n    dispatch({\n      type: types.ADD_CONTACT,\n      payload: {\n        id,\n        name,\n        email,\n        phone,\n      },\n    });\n  };\n\n  const updateContact = ({ id, name, email, phone }) => {\n    dispatch({\n      type: types.UPDATE_CONTACT,\n      payload: {\n        id,\n        name,\n        email,\n        phone,\n      },\n    });\n  };\n\n  const getContact = (text) => {\n    dispatch({\n      type: types.FIND_CONTACT,\n      payload: text,\n    });\n  };\n\n  const deleteContact = (id) => {\n    dispatch({\n      type: types.DELETE_CONTACT,\n      payload: id,\n    });\n  };\n\n  const setCurrentContact = (data) => {\n    dispatch({\n      type: types.CURRENT_CONTACT,\n      payload: data,\n    });\n  };\n\n  const clearCurrentContact = () => {\n    dispatch({ type: types.CLEAR_CURRENT_CONTACT });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contactState: state,\n        addContact,\n        updateContact,\n        getContact,\n        deleteContact,\n        setCurrentContact,\n        clearCurrentContact,\n      }}>\n      {children}\n    </ContactContext.Provider>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport InputMask from 'react-input-mask';\nimport Modal from 'react-modal';\nimport { ContactContext } from '../../context/contactState';\n\nconst customStyles = {\n  content: {\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0 16px 10px 0 rgba(0, 0, 0, 0.16)',\n    borderRadius: '16px',\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n  },\n};\n\nconst ContactModal = ({ isOpen, closeModal, currentId }) => {\n  const {\n    contactState,\n    addContact,\n    updateContact,\n    setCurrentContact,\n    clearCurrentContact,\n  } = useContext(ContactContext);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  const initialState = {\n    id: uuidv4(),\n    name: '',\n    email: '',\n    phone: '',\n  };\n\n  const [formData, setFormData] = useState(initialState);\n\n  const afterOpenModal = async () => {\n    if (currentId) {\n      const editContact = await contactState.contacts.filter((contact) => {\n        return contact.id === currentId;\n      });\n\n      const { id, name, email, phone } = editContact[0];\n      setFormData({ ...formData, id, name, email, phone });\n      setIsEditMode(true);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleCloseModal = () => {\n    setFormData(initialState);\n    closeModal();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { id } = formData;\n\n    if (isEditMode) {\n      clearCurrentContact();\n      updateContact(formData);\n    } else {\n      addContact(formData);\n      setCurrentContact(id);\n    }\n\n    handleCloseModal();\n  };\n\n  const checkEmptyForm = () => {\n    return Object.values(formData).every((item) => item === '');\n  };\n\n  return (\n    <Modal\n      appElement={document.getElementById('root')}\n      id='contact-modal'\n      isOpen={isOpen}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}>\n      <form onSubmit={handleSubmit}>\n        <div className='header'>\n          <p>Criar novo contato</p>\n        </div>\n        <div className='body'>\n          <div>\n            <label htmlFor='name'>Nome</label>\n            <input\n              name='name'\n              type='text'\n              value={formData.name}\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='email'>E-mail</label>\n            <input\n              name='email'\n              type='email'\n              value={formData.email}\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='phone'>Telefone</label>\n            <InputMask\n              mask='(99)99999-9999'\n              name='phone'\n              type='text'\n              className='phone'\n              value={formData.phone}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className='footer'>\n          <button className='button default' onClick={handleCloseModal}>\n            Cancelar\n          </button>\n          <button\n            type='submit'\n            className={`button ${checkEmptyForm() ? 'disabled' : 'success'}`}\n            disabled={checkEmptyForm()}>\n            Salvar\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default ContactModal;\n","import React from 'react';\n\nconst ButtonWithIcon = ({ text, icon, styles, onClick }) => {\n  return (\n    <button className={`button ${styles}`} onClick={onClick}>\n      {icon}\n      {text}\n    </button>\n  );\n};\n\nexport default ButtonWithIcon;\n","import React, { useState, useContext, useRef } from 'react';\nimport { ContactContext } from '../context/contactState';\nimport ContactModal from './contacts/ContactModal';\nimport ButtonWithIcon from './ButtonWithIcon';\n\nimport IcLogo from '../images/ic-logo.svg';\nimport IcSearch from '../images/ic-search.svg';\n\nconst Header = () => {\n  const { contactState, getContact, clearCurrentContact } = useContext(\n    ContactContext\n  );\n  const [showModal, setShowModal] = useState(false);\n\n  const text = useRef('');\n\n  const handleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onChange = () => {\n    if (contactState.current) {\n      clearCurrentContact();\n    }\n\n    getContact(text.current.value);\n  };\n\n  return (\n    <header>\n      <div className='logo'>\n        <img src={IcLogo} alt='logo' />\n      </div>\n      <div className='create-user'>\n        {contactState.contacts.length > 0 && (\n          <ButtonWithIcon\n            icon={<i className='fa fa-plus' aria-hidden='true'></i>}\n            styles={'primary slim'}\n            text='Criar contato'\n            onClick={handleModal}\n          />\n        )}\n      </div>\n      <div className='search-box'>\n        <input\n          type='text'\n          placeholder='Buscar...'\n          onChange={onChange}\n          ref={text}\n        />\n        <img src={IcSearch} alt='buscar' />\n      </div>\n      <ContactModal isOpen={showModal} closeModal={handleModal} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Avatar = ({ name }) => {\n  const getFirstLetter = () => {\n    return name.charAt(0).toUpperCase();\n  };\n\n  const randomColor = () => {\n    const intial = getFirstLetter();\n\n    const avatarColor = [\n      {\n        color: 'orange',\n        letters: ['A', 'I', 'Q', 'W'],\n      },\n      {\n        color: 'green',\n        letters: ['B', 'J', 'R', 'Z'],\n      },\n      {\n        color: 'blue',\n        letters: ['C', 'K', 'S'],\n      },\n      {\n        color: 'egg',\n        letters: ['D', 'L', 'T'],\n      },\n      {\n        color: 'purple',\n        letters: ['E', 'M', 'U'],\n      },\n      {\n        color: 'pink',\n        letters: ['F', 'N', 'V'],\n      },\n      {\n        color: 'cyan',\n        letters: ['G', 'O', 'X'],\n      },\n      {\n        color: 'shrimp',\n        letters: ['H', 'P', 'Y'],\n      },\n    ];\n\n    const chosenColor = avatarColor.filter((item) => {\n      return item.letters.includes(intial);\n    });\n\n    return chosenColor.length > 0 ? chosenColor[0].color : 'grey';\n  };\n\n  return (\n    <div className={`round-avatar ${randomColor()}`}>{getFirstLetter()}</div>\n  );\n};\n\nexport default Avatar;\n","import React, { useContext } from 'react';\nimport { ContactContext } from '../../context/contactState';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0 16px 10px 0 rgba(0, 0, 0, 0.16)',\n    borderRadius: '16px',\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n  },\n};\n\nconst ContactRemoveModal = ({ isOpen, closeModal, currentId }) => {\n  const { deleteContact } = useContext(ContactContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    deleteContact(currentId);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      appElement={document.getElementById('root')}\n      id='contact-remove-modal'\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      style={customStyles}>\n      <form onSubmit={handleSubmit}>\n        <div className='header'>\n          <p>Excluir contato</p>\n        </div>\n        <div className='body'>Deseja realmente excluir este contato?</div>\n        <div className='footer'>\n          <button className='button default' onClick={closeModal}>\n            Cancelar\n          </button>\n          <button type='submit' className='button success'>\n            Excluir\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default ContactRemoveModal;\n","import React, { useState, useContext, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { ContactContext } from '../../context/contactState';\nimport ContactModal from './ContactModal';\nimport ButtonWithIcon from '../ButtonWithIcon';\nimport Avatar from '../Avatar';\n\nimport IcBook from '../../images/ic-book.svg';\nimport { useTable } from 'react-table';\nimport ContactRemoveModal from './ContactRemoveModal';\n\nconst ContactList = () => {\n  const { contactState } = useContext(ContactContext);\n  const [showModal, setShowModal] = useState(false);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [currentId, setCurrentId] = useState(null);\n\n  const tableColumns = [\n    {\n      Header: '',\n      accessor: 'avatar',\n      Cell: ({ row }) => {\n        return <Avatar name={row.original.name} />;\n      },\n    },\n    {\n      Header: 'Nome',\n      accessor: 'name',\n    },\n    {\n      Header: 'E-mail',\n      accessor: 'email',\n    },\n    {\n      Header: 'Telefone',\n      accessor: 'phone',\n    },\n    {\n      Header: '',\n      accessor: 'options',\n      Cell: ({ row }) => {\n        return (\n          <div className='contact-options'>\n            <i\n              className='fas fa-pencil-alt'\n              onClick={() => onClickEdit(row.original.id)}></i>\n            <i\n              className='fas fa-trash-alt'\n              onClick={() => onClickDelete(row.original.id)}></i>\n          </div>\n        );\n      },\n    },\n  ];\n\n  const handleModal = () => {\n    if (showModal) {\n      setCurrentId(null);\n    }\n    setShowModal(!showModal);\n  };\n\n  const handleRemoveModal = () => {\n    if (showRemoveModal) {\n      setCurrentId(null);\n    }\n    setShowRemoveModal(!showRemoveModal);\n  };\n\n  const onClickEdit = (id) => {\n    setCurrentId(id);\n    setShowModal(true);\n  };\n\n  const onClickDelete = (id) => {\n    setCurrentId(id);\n    setShowRemoveModal(true);\n  };\n\n  const backgroundColor = (itemInserted) => {\n    return itemInserted === contactState.current\n      ? {\n          animate: { backgroundColor: ['#fff3f2', '#f8f9fd'] },\n          transition: { delay: '10', duration: 1 },\n        }\n      : {};\n  };\n\n  const Table = () => {\n    const currentData = contactState.filtered\n      ? contactState.filtered\n      : contactState.contacts;\n\n    const columns = useMemo(() => tableColumns, []);\n    const data = useMemo(() => currentData, [currentData]);\n\n    const tableInstance = useTable({\n      columns,\n      data,\n    });\n\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n    } = tableInstance;\n\n    return (\n      <table {...getTableProps()} className='contact-table'>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n\n            return (\n              <motion.tr\n                id={row.original.id}\n                {...row.getRowProps()}\n                {...backgroundColor(row.original.id)}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  );\n                })}\n              </motion.tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  };\n\n  return (\n    <div id='contact-list-container'>\n      {contactState.contacts.length < 1 ? (\n        <div id='contact-create'>\n          <img src={IcBook} alt='contato' />\n          <p>Nenhum contato foi criado ainda.</p>\n          <ButtonWithIcon\n            icon={<i className='fa fa-plus' aria-hidden='true'></i>}\n            styles={'primary'}\n            text='Criar contato'\n            onClick={handleModal}\n          />\n        </div>\n      ) : (\n        <Table />\n      )}\n      <ContactModal\n        isOpen={showModal}\n        closeModal={handleModal}\n        currentId={currentId}\n      />\n      <ContactRemoveModal\n        isOpen={showRemoveModal}\n        closeModal={handleRemoveModal}\n        currentId={currentId}\n      />\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { ContactProvider } from '../context/contactState';\nimport Header from '../components/Header';\nimport ContactList from '../components/contacts/ContactList';\n\nconst HomeScreen = () => {\n  return (\n    <ContactProvider>\n      <div id='home-screen-container'>\n        <Header />\n        <ContactList />\n      </div>\n    </ContactProvider>\n  );\n};\n\nexport default HomeScreen;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HomeScreen from './screens/HomeScreen';\n\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Route path='/agenda' exact component={HomeScreen} />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}